/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Michael V (https://sketchfab.com/bossdeff)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sci-fi-computer-room-a149d5bfcef6496c9a0606b5ce5ebf27
Title: Sci-Fi Computer Room
*/

import React, { useMemo, useRef } from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import * as THREE from "three";
import { useFrame } from '@react-three/fiber';

export function Room2(props) {
  const matcapTexture = useTexture('images/texture/mat1.jpg');
  const deskTexture = useTexture('images/texture/comp.png');
  const { nodes, materials } = useGLTF('models/sci-fi_computer_room.glb');
  const keyboardRef = useRef();
  const keyboardMaterial = useMemo(() => {
    return new THREE.MeshPhongMaterial({
      color: new THREE.Color(0.2, 0.8, 0.3), // Base color
      emissive: new THREE.Color(0, 0, 0), // Will be animated for RGB effect
    });
  }, []);
  useFrame((state) => {
    if (keyboardRef.current) {
      const time = state.clock.elapsedTime;

      // Smooth RGB color cycling
      const r = (Math.sin(time * 2) + 1) / 2;
      const g = (Math.sin(time * 2 + Math.PI * 2 / 3) + 1) / 2;
      const b = (Math.sin(time * 2 + Math.PI * 4 / 3) + 1) / 2;

      // Apply to emissive for glow effect
      keyboardRef.current.material.emissive.setRGB(r * 0.3, g * 0.3, b * 0.3);

    }


  });
  const speakerMaterial = new THREE.MeshPhongMaterial({ color: '#d90429' });

  const bodyMaterial = new THREE.MeshPhongMaterial({
    map: matcapTexture
  });
  const desktopMaterial = new THREE.MeshPhongMaterial({
    map: deskTexture,
    color: 'white',

  });

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.987}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials.Desk_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_3.geometry}
          material={materials.Posters}
        />
        <mesh
          ref={keyboardRef}
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={keyboardMaterial}
        />
        <mesh

          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={speakerMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_6.geometry}
          material={materials.BG_Dark}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_7.geometry}
          material={materials.Carpet}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_8.geometry}
          material={keyboardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_9.geometry}
          material={keyboardMaterial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.Foam_Acoustic}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.Foam_Acoustic}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12.geometry}
          material={materials.Trim_Sheet_Wall}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_13.geometry}
          material={desktopMaterial}
        />
      </group>
    </group>
  );
}

useGLTF.preload('models/sci-fi_computer_room.glb')


